stages:
  - build
  - deploy
  - deploy-production

build-app:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
    - docker build -f .docker/laravel-fpm/Dockerfile -t ${CONTAINER_IMAGE_APP}:${CI_COMMIT_SHA} -t ${CONTAINER_IMAGE_APP_LATEST} .
    - docker push ${CONTAINER_IMAGE_APP}
  only:
    - master
    - development
  variables:
    CONTAINER_IMAGE_APP: ${CI_REGISTRY}/${CI_PROJECT_PATH}/${CI_COMMIT_REF_NAME}/app
    CONTAINER_IMAGE_APP_LATEST: ${CI_REGISTRY}/${CI_PROJECT_PATH}/${CI_COMMIT_REF_NAME}/app:latest

build-frontend:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
    - docker build -f .docker/app-nginx/Dockerfile -t ${CONTAINER_IMAGE_NGINX}:${CI_COMMIT_SHA} -t ${CONTAINER_IMAGE_NGINX_LATEST} .
    - docker push ${CONTAINER_IMAGE_NGINX_LATEST}
  only:
    - master
    - development
  variables:
    CONTAINER_IMAGE_NGINX: ${CI_REGISTRY}/${CI_PROJECT_PATH}/${CI_COMMIT_REF_NAME}/nginx
    CONTAINER_IMAGE_NGINX_LATEST: ${CI_REGISTRY}/${CI_PROJECT_PATH}/${CI_COMMIT_REF_NAME}/nginx:latest


deploy-development:
  stage: deploy
  image: pstauffer/curl
  only:
    - development
  variables:
    GIT_STRATEGY: none
  script:
    - RESP=$(curl -X POST ${STAGE_SERVICE_WEBHOOK_APP})
    - if echo $RESP | grep -q ‘err’; then exit 1; fi
    - RESP=$(curl -X POST ${STAGE_SERVICE_WEBHOOK_NGINX})
    - if echo $RESP | grep -q ‘err’; then exit 1; fi

deploy-preprod:
  stage: deploy-production
  image: pstauffer/curl
  only:
    - master
  variables:
    GIT_STRATEGY: none
  script:
    - RESP=$(curl -X POST ${PREPROD_SERVICE_WEBHOOK_APP})
    - if echo $RESP | grep -q ‘err’; then exit 1; fi
    - RESP=$(curl -X POST ${PREPROD_SERVICE_WEBHOOK_NGINX})
    - if echo $RESP | grep -q ‘err’; then exit 1; fi

deploy-master:
  stage: deploy-production
  image: pstauffer/curl
  only:
    - master
  variables:
    GIT_STRATEGY: none
  when: manual
  script:
    - RESP=$(curl -X POST ${PROD_SERVICE_WEBHOOK_APP})
    - if echo $RESP | grep -q ‘err’; then exit 1; fi
    - RESP=$(curl -X POST ${PROD_SERVICE_WEBHOOK_NGINX})
    - if echo $RESP | grep -q ‘err’; then exit 1; fi
